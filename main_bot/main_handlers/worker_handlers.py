from aiogram import Router, Bot, F
from aiogram.types import Message, FSInputFile
from middlewares import IsVerifiedMiddleware, AuthorizeMiddleware
from database.models import User
import datetime as dt

router = Router()
router.message.middleware(AuthorizeMiddleware())
router.message.middleware(IsVerifiedMiddleware())
router.callback_query.middleware(AuthorizeMiddleware())
router.callback_query.middleware(IsVerifiedMiddleware())


@router.message(F.text == 'üíé –ü—Ä–æ—Ñ–∏–ª—å')
async def profile(message: Message, user: User):
    days_number = (dt.datetime.now() - user.created_at).days
    text = f'<b>üîÆ –ü—Ä–æ—Ñ–∏–ª—å –≤–æ—Ä–∫–µ—Ä–∞</b>\n\nTelegram ID: {user.tg_id}\n\
–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ –±–æ—Ç–µ {days_number} –¥–Ω–µ–π –Ω–∞–∑–∞–¥'
    await message.answer(text, parse_mode='HTML')


@router.message(F.text == 'üíº –¢—Ä–µ–π–¥ –±–æ—Ç')
async def trade_bot(message: Message, user: User):
    link = 'https://t.me/develop_021_bot'  # EDIT BEFORE DEPLOY
    text = ('üíº <b>–¢—Ä–µ–π–¥ –±–æ—Ç</b>\n\n'
            f'{link}\n'
            f'–ß—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ –≤–æ—Ä–∫-–ø–∞–Ω–µ–ª—å, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ <code>–í–æ—Ä–∫–µ—Ä</code>\n'
            f'<b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</b>\n'
            f"<a href='{link}?start=w{user.tg_id}'>–ù–∞–∂–º–∏ –∏ —Å–∫–æ–ø–∏—Ä—É–π</a>")
    await message.answer(text, parse_mode='HTML')


@router.message(F.text == 'üéÜ NFT –±–æ—Ç')
async def nft_bot(message: Message, user: User):
    link = 'https://t.me/test_dev_shop_bot'  # EDIT BEFORE DEPLOY
    text = ('üéÜ <b>NFT –±–æ—Ç</b>\n\n'
            f'{link}\n'
            f'–ß—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ –≤–æ—Ä–∫-–ø–∞–Ω–µ–ª—å, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ <code>–í–æ—Ä–∫–µ—Ä</code>\n'
            f'<b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</b>\n'
            f"<a href='{link}?start={user.tg_id}'>–ù–∞–∂–º–∏ –∏ —Å–∫–æ–ø–∏—Ä—É–π</a>")
    await message.answer(text, parse_mode='HTML')


@router.message(F.text == 'üóΩ –û –ø—Ä–æ–µ–∫—Ç–µ')
async def about_project(message: Message, user: User):
    text = ('<b>üóΩ–û –ø—Ä–æ–µ–∫—Ç–µ</b>\n\n')
    await message.answer(text, parse_mode='HTML')
